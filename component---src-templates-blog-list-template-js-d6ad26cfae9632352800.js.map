{"version":3,"sources":["webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js","webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js"],"names":["Post","styled","ReadPost","colors","PostHeader","Excerpt","PostTitleLink","FooterLine","props","title","excerpt","slug","language","tags","timeToRead","defaultLang","useSiteMetadata","to","dangerouslySetInnerHTML","__html","min","aria-label","PostsList","render","posts","this","post","key","React","Component","PaginationWrapper","PageBtn","PreviousBtn","NextBtn","Spacer","PageInfo","currentPage","nbPages","previousUrl","className","BlogList","data","site","description","pageContext","location","subTitle","pageQuery"],"mappings":"oNASMA,EAAOC,IAAH,kFAAGA,CAAH,CAAV,0EAKMC,EAAWD,YAAH,sFAAGA,CAAH,iOASHE,IATG,QAYUA,IAZV,aAcDA,IAdb,cAkBMC,EAAaH,IAAH,uFAAGA,CAAH,CAAhB,mBAIMI,EAAUJ,IAAH,+EAAGA,CAAH,CAAb,2CAKMK,EAAgBL,YAAH,2FAAGA,CAAH,qDACRE,IADQ,QAGaA,IAHhC,SAOMI,EAAaN,IAAH,oFAAGA,CAAH,+BACLE,IADX,WAmCA,EA9BsB,SAAAK,GAAU,IACtBC,EAAqDD,EADhC,MACdE,EAA8CF,EADhC,QACLG,EAAqCH,EADhC,KACCI,EAA+BJ,EADhC,SACWK,EAAqBL,EADhC,KACiBM,EAAeN,EADhC,WAErBO,EAAgBC,cAFK,YAI7B,OACE,yBACE,yBACE,4BACE,qBAAeC,GAAE,IAAMN,GACpBI,OAA4B,uBAAMH,SAAUA,IAJrD,KASE,iCACE,qBAASM,wBAAyB,CAAEC,OAAQT,MAE9C,gCACE,yBACE,uBAAaU,IAAKN,IAClB,sBAFF,MAGE,uBAASD,KAAMA,KAEjB,qBAAUI,GAAE,IAAZ,EAA0BI,aAAA,sBAnBhC,kB,ICrDIC,E,gLACJC,kBAAU,IACAC,EAAUC,KADX,YAGP,OACE,kCACGD,EAAA,KAAU,SAAAE,GACT,IAAMlB,EAAQ,CACZC,MAAOiB,mBADK,MAEZhB,QAASgB,OAFG,QAGZf,KAAMe,mBAHM,KAIZZ,WAAYY,OAJA,WAKZd,SAAUc,6BALE,KAMZb,KAAMa,yBAA8B,IAEtC,OAAO,mCAAeC,IAAKnB,EAAMG,MAAjC,S,GAfciB,IAAMC,WAqB9B,O,wJCpBA,IAAMC,EAAoB7B,IAAH,oFAAGA,CAAH,CAAvB,oOAkBM8B,EAAU9B,YAAH,8EAAGA,CAAH,8NAESE,IAFT,QAGSA,IAHT,QAIFA,IAJE,aASWA,IATX,aAUAA,IAVA,QAWWA,IAXxB,SAoBM6B,EAAc/B,YAAH,6EAAGA,CAAH,CAAjB,+CAOMgC,EAAUhC,YAAH,yEAAGA,CAAH,CAAb,aAIMiC,EAASjC,IAAH,0EAAGA,CAAH,CAAZ,kJAyBMkC,EAAWlC,IAAH,4EAAGA,CAAH,CAAd,6DAmCA,E,gLA1BEsB,kBAAU,IAAD,EAC0BE,KAD1B,MACCW,EADD,cACcC,EADd,UAEDC,EAAcF,qBAAoCA,EAAxD,GAEA,OACE,yBACG,IAAAA,EACC,qBAAanB,GAAIqB,GADlB,iBAGC,qBAAQC,UAAU,aAGpB,0CAPF,GAWGH,EAAA,EACC,qBAASnB,GAAE,WAAYmB,EAAZ,IADZ,iBAGC,qBAAQG,UAAU,W,GApBHX,IAAMC,W,0DC7EzBW,E,gLACJjB,kBAAU,IAAD,EACwBE,KAAKjB,MAAMiC,KAAKC,KADxC,aACCjC,EADD,QACQkC,EADR,cAEDnB,EAAQC,KAAKjB,MAAMiC,KAAKjB,MAA9B,MACQoB,EAAgBnB,KAHjB,kBAKP,OACE,uBAAQoB,SAAUpB,KAAKjB,MAAMqC,UAC3B,sBADF,MAEE,uBAAMpC,MAAN,EAAoBqC,SAAUH,IAE9B,2BACE,uBAAWnB,MAAOA,KAGpB,qBACEa,QAASO,EADX,QAEER,YAAaQ,EAAYR,gB,GAjBZR,IAAMC,WA0BhBkB,GAFb,YAEO","file":"component---src-templates-blog-list-template-js-d6ad26cfae9632352800.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Flag from './Flag/Flag'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { colors } from '../tokens'\nimport { Bull, ReadingTime } from './Commons'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: ${colors.primary};\n\n  &:hover {\n    background-color: ${colors.primaryAlpha};\n    border-radius: 0.25rem;\n    color: ${colors.textLightest};\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: ${colors.primary};\n  &:hover {\n    border-bottom: 1px dotted ${colors.primary};\n  }\n`\n\nconst FooterLine = styled.div`\n  color: ${colors.textLight};\n  font-size: 0.8em;\n`\n\nconst PostsListItem = props => {\n  const { title, excerpt, slug, language, tags, timeToRead } = props\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Post>\n      <PostHeader>\n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {defaultLang !== language && <Flag language={language} />}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n      <footer>\n        <FooterLine>\n          <ReadingTime min={timeToRead} />\n          <Bull />\n          <TagList tags={tags} />\n        </FooterLine>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post ›\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\n\nclass PostsList extends React.Component {\n  render() {\n    const { posts } = this.props\n\n    return (\n      <Fragment>\n        {posts.map(post => {\n          const props = {\n            title: post.node.frontmatter.title,\n            excerpt: post.node.excerpt,\n            slug: post.node.frontmatter.slug,\n            timeToRead: post.node.timeToRead,\n            language: post.node.frontmatter.language || 'fr',\n            tags: post.node.frontmatter.tags || [],\n          }\n          return <PostsListItem key={props.slug} {...props} />\n        })}\n      </Fragment>\n    )\n  }\n}\nexport default PostsList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { colors } from '../tokens'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: ${colors.primary};\n  border: 1px solid ${colors.primary};\n  color: ${colors.textLightest};\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: ${colors.textLightest};\n    color: ${colors.primary};\n    border: 1px solid ${colors.primary};\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>‹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts ›</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport Hero from '../components/Hero'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\n\nclass BlogList extends React.Component {\n  render() {\n    const { title, description } = this.props.data.site.siteMetadata\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        <Hero title={title} subTitle={description} />\n\n        <Wrapper>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <Pagination\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: { regex: \"//content/posts//\" }\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            language\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}