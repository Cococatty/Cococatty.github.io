{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["group","title","slug","tag","key","fieldValue","to","pageQuery"],"mappings":"2FAAA,sIAgEA,UApDiB,SAAC,GAAD,IAEQA,EAFR,sCAQjB,2BACE,uBAEEC,MAFF,WAEmBC,KAAK,SAGxB,2BACE,6BACE,4BACGF,EAAA,KAAU,SAAAG,GAAG,OACZ,wBAAIC,IAAKD,EAAIE,YACX,0BAAMC,GAAE,SAAYH,EAAZ,gBACLA,EADH,gBACqBA,EADrB,WAFU,YAWpB,2BACE,uBAAQD,KAAR,OAAoBD,MAAM,YAyBvB,IAAMM,EAAN","file":"component---src-pages-tags-js-600942253fddd3ccee44.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\n// imports from template page, blog-post.js\r\nimport Wrapper from '../components/Wrapper'\r\nimport Hero from '../components/Hero'\r\nimport Disqus from '../components/Disqus'\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group }\r\n    // site: {\r\n    //   siteMetadata: { title },\r\n    // },\r\n  },\r\n}) => (  \r\n<Layout>\r\n  <Hero\r\n    // heroImg={post.frontmatter.cover && post.frontmatter.cover.publicURL}\r\n    title='All Tags' slug='tags'\r\n  />\r\n\r\n  <Wrapper>\r\n    <div>      \r\n      <ul>\r\n        {group.map(tag => (\r\n          <li key={tag.fieldValue}>\r\n            <Link to={`/tags/${(tag.fieldValue)}/`}>\r\n              {tag.fieldValue} ({tag.totalCount})\r\n            </Link>\r\n          </li>\r\n      ))}\r\n      </ul>      \r\n      </div>  \r\n  </Wrapper>\r\n\r\n  <Wrapper>\r\n    <Disqus slug='tags' title='tags' />\r\n  </Wrapper>\r\n</Layout>  \r\n)\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}