{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js"],"names":["PaginationWrapper","styled","PageBtn","colors","PreviousBtn","NextBtn","Spacer","PageInfo","render","this","currentPage","nbPages","previousUrl","to","className","React","Component","BlogList","props","data","site","title","description","posts","pageContext","location","subTitle","pageQuery"],"mappings":"wQAKMA,EAAoBC,UAAH,oFAAGA,CAAH,CAAvB,oOAkBMC,EAAUD,kBAAH,8EAAGA,CAAH,8NAESE,IAFT,QAGSA,IAHT,QAIFA,IAJE,aASWA,IATX,aAUAA,IAVA,QAWWA,IAXxB,SAoBMC,EAAcH,kBAAH,6EAAGA,CAAH,CAAjB,+CAOMI,EAAUJ,kBAAH,yEAAGA,CAAH,CAAb,aAIMK,EAASL,UAAH,0EAAGA,CAAH,CAAZ,kJAyBMM,EAAWN,UAAH,4EAAGA,CAAH,CAAd,6DAmCA,E,kGA1BEO,kBAAU,IAAD,EAC0BC,KAD1B,MACCC,EADD,cACcC,EADd,UAEDC,EAAcF,qBAAoCA,EAAxD,GAEA,OACE,yBACG,IAAAA,EACC,qBAAaG,GAAID,GADlB,iBAGC,qBAAQE,UAAU,aAGpB,0CAPF,GAWGJ,EAAA,EACC,qBAASG,GAAE,WAAYH,EAAZ,IADZ,iBAGC,qBAAQI,UAAU,W,GApBHC,IAAMC,W,YC7EzBC,E,kGACJT,kBAAU,IAAD,EACwBC,KAAKS,MAAMC,KAAKC,KADxC,aACCC,EADD,QACQC,EADR,cAEDC,EAAQd,KAAKS,MAAMC,KAAKI,MAA9B,MACQC,EAAgBf,KAHjB,kBAKP,OACE,uBAAQgB,SAAUhB,KAAKS,MAAMO,UAC3B,sBADF,MAEE,uBAAMJ,MAAN,EAAoBK,SAAUJ,IAE9B,2BACE,uBAAWC,MAAOA,KAGpB,qBACEZ,QAASa,EADX,QAEEd,YAAac,EAAYd,gB,GAjBZK,IAAMC,WA0BhBW,GAFb,YAEO","file":"component---src-templates-blog-list-template-js-f62e542ad0727fdf2d37.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport { colors } from '../tokens'\r\n\r\nconst PaginationWrapper = styled.nav`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 4em;\r\n  justify-content: space-between;\r\n  width: 80%;\r\n  max-width: 770px;\r\n  padding: 25px 0;\r\n  margin: 0px auto;\r\n\r\n  @media (max-width: 780px) {\r\n    width: 90%;\r\n    padding: 25px 0;\r\n  }\r\n`\r\n\r\nconst PageBtn = styled(Link)`\r\n  border-radius: 3px;\r\n  background-color: ${colors.primary};\r\n  border: 1px solid ${colors.primary};\r\n  color: ${colors.textLightest};\r\n  padding: 8px 20px;\r\n  min-width: 130px;\r\n\r\n  &:hover {\r\n    background-color: ${colors.textLightest};\r\n    color: ${colors.primary};\r\n    border: 1px solid ${colors.primary};\r\n  }\r\n\r\n  @media (max-width: 564px) {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst PreviousBtn = styled(PageBtn)`\r\n  order: 1;\r\n  @media (max-width: 564px) {\r\n    order: 2;\r\n  }\r\n`\r\n\r\nconst NextBtn = styled(PageBtn)`\r\n  order: 3;\r\n`\r\n\r\nconst Spacer = styled.span`\r\n  display: block;\r\n  min-width: 130px;\r\n\r\n  &.previous {\r\n    order: 1;\r\n  }\r\n\r\n  &.next {\r\n    order: 3;\r\n  }\r\n\r\n  @media (max-width: 564px) {\r\n    display: none;\r\n\r\n    &.previous {\r\n      order: 2;\r\n    }\r\n\r\n    &.next {\r\n      order: 3;\r\n    }\r\n  }\r\n`\r\n\r\nconst PageInfo = styled.span`\r\n  order: 2;\r\n  padding: 1em 0;\r\n  @media (max-width: 564px) {\r\n    order: 1;\r\n  }\r\n`\r\n\r\nclass Pagination extends React.Component {\r\n  render() {\r\n    const { currentPage, nbPages } = this.props\r\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\r\n\r\n    return (\r\n      <PaginationWrapper>\r\n        {currentPage !== 1 ? (\r\n          <PreviousBtn to={previousUrl}>‹ Newer posts</PreviousBtn>\r\n        ) : (\r\n          <Spacer className=\"previous\" />\r\n        )}\r\n\r\n        <PageInfo>\r\n          Page {currentPage} of {nbPages}\r\n        </PageInfo>\r\n\r\n        {currentPage < nbPages ? (\r\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts ›</NextBtn>\r\n        ) : (\r\n          <Spacer className=\"next\" />\r\n        )}\r\n      </PaginationWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport Wrapper from '../components/Wrapper'\r\nimport Hero from '../components/Hero'\r\nimport PostsList from '../components/PostsList'\r\nimport Pagination from '../components/Pagination'\r\nimport SEO from '../components/SEO'\r\n\r\nclass BlogList extends React.Component {\r\n  render() {\r\n    const { title, description } = this.props.data.site.siteMetadata\r\n    const posts = this.props.data.posts.edges\r\n    const { pageContext } = this.props\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <SEO />\r\n        <Hero title={title} subTitle={description} />\r\n\r\n        <Wrapper>\r\n          <PostsList posts={posts} />\r\n        </Wrapper>\r\n\r\n        <Pagination\r\n          nbPages={pageContext.nbPages}\r\n          currentPage={pageContext.currentPage}\r\n        />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogList\r\n\r\nexport const pageQuery = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    posts: allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"//content/posts//\" }\r\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\r\n      }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            language\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}